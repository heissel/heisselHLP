#!/usr/bin/perl 
#-w

use Getopt::Std;

getopts('t:evo') || &bail;

    # $opt_t is required; timescale of filter
    # $opt_e means do not append the remaining columns, ie only t(i) pass(i) in result files
    # $opt_o means write also the original series

# highpass filters a time series, given a file with t(i) x(i) as first two
# entries. Outputs the hi- and low-pass filtered series to files as
#
# (input).hip :  t(i) x_hp(i)
# (input).lop :  t(i) x_lp(i)
#
# Any remaining columns in original file are kept unchanged
#


# read the file

$| = 1;  # forces a flush after every print

unless ($opt_t) {
    print "Please specify time interval!\n";
    &bail();
} else {
    $gauss_t = $opt_t;
}

unless (@ARGV) {
    print "No file name given!\n";
    &bail();
} else {
    @files = @ARGV;
}

foreach $file (@files) {
    open IN, "<$file";
    @t = ();
    @x = ();
    @ex = ();

    $num =0;
    while ($in = <IN>) { 
	$in =~ s/^\s+//s;
	@in = split /\s+/, $in;
	$t = shift @in;
	$prev_t = $t unless $num;
	if ($t < $prev_t) {
	    @num = (@num, $num);
	    $num = 0;
	}
	$prev_t = $t;
	@t = (@t, $t);
	@x = (@x, shift @in);
	@ex = (@ex, "@in");
	$num++;
    }
    @num = (@num, $num);
    close IN;

    if ($opt_v) {
	$sumnn = 0;
	$num_ser = @num;
	print "There are $num_ser subseries.\nNumber of points in subseries: @num\n";
    }

    open HIPASS, ">$file.hip" || die "Error creating $file.hip\n";
    open LOPASS, ">$file.lop" || die "Error creating $file.lop\n";

    # for each point: sum neighbors inside the gauss-bell
    $last_num_pts = 0;
    foreach $num_pts (@num) {
	for ( $i = $last_num_pts ; $i < $num_pts + $last_num_pts ; $i++ ) {
	    $hip  = 0.0;
	    $wsum = 0.0;
	    $num = 0;
	    # sum going down
	    $j = $i - 1;
	    while ( $j >= $last_num_pts && $t[$i] - $t[$j] < 2.5 * $gauss_t && $t[$i] - $t[$j] >= 0.0 ) {
		$wgt = exp ( -1.0* ( ($t[$i] - $t[$j])/$gauss_t )**2 );
		$hip += $x[$j] * $wgt;
		$wsum += $wgt;
		$j--;
		$num++;
	    }
	    #sum going up
	    $j = $i;
	    while ($j < $num_pts + $last_num_pts && $t[$j] - $t[$i] < 2.5 * $gauss_t && $t[$j] - $t[$i] >= 0.0 ) {
		$wgt = exp ( -1.0* ( ($t[$i] - $t[$j])/$gauss_t )**2 );
		$hip += $x[$j] * $wgt;
		$wsum += $wgt;
		$j++;
		$num++;
	    }
	    $hip = $hip / $wsum;
	    $lop = $x[$i] - $hip;

	    if ($opt_v) {
		$sumnn += $num;
	    }
	    if ($opt_e) {
		if ($opt_o) {
		    print LOPASS "$t[$i]  $hip  $x[$i]\n";
		    print HIPASS "$t[$i]  $lop  $x[$i]\n";
		} else {
		    print LOPASS "$t[$i]  $hip\n";
		    print HIPASS "$t[$i]  $lop\n";
		}
	    } else {
		if ($opt_o) {
		    print LOPASS "$t[$i]  $hip  $x[$i]  $ex[$i]\n";
		    print HIPASS "$t[$i]  $lop  $x[$i]  $ex[$i]\n";
		} else {
		    print LOPASS "$t[$i]  $hip  $ex[$i]\n";
		    print HIPASS "$t[$i]  $lop  $ex[$i]\n";
		}
	    }
	}
	$last_num_pts += $num_pts;
    }
    close LOPASS;
    close HIPASS;

    if ($opt_v) {
	$sumnn =  $sumnn / sum(@num);
	print "Used $sumnn points in the smooth on average.\n";
    }
}

exit();

sub sum {  # summerer et givet array
    use strict;
    my($sum,$e);
    $sum=0;
    foreach $e (@_) {
        $sum += $e;
    }
    return $sum;
}


sub bail {
    print "Fatal error. Exiting!\n";
    exit();
}

=pod

=head1 ix.hipass

=head2 Syntax

ix.hipass B<-t> I<time_scale> [B<-v>] [B<-e>] F<files>

=head2 Description

Reads time series from F<files> and writes new files with the high- and low-pass filtered
series. The files have the same name just ending on F<.hip> and F<.lop> respectively.
The parameter I<time_scale> given by the (non-optional) option B<-t>, is the width of the
gaussian smoothing used to produce the low-pass filtered series.
The input F<files> must have the following structure of the rows, with time generally increasing 
down the file:

I<time>  I<data>  I<extras>

The file may contain different subsets that will be
       treated individually via the difference in time between
       the end of one series and the beginning of the next.  The
       structure of the result files are:

I<time>  I<high_or_low_pass>   I<extras>

where the writing of the B<extras> can be omitted via the B<-e> option.


=over 3

=item B<-t> I<time_scale>

This must NOT be omitted.
Time scale for the smoothing of the time series, which produces the low-pass filtered series. 
Actually the FWHM of the gaussian used in
the smoothing. 

=item B<-v>

Verbose mode. Prints information about the series and the smoothing.

=item B<-e>

Do not write the "extra" columns to the new files.

=back

=head2 Status

v0.9.2 Thomas H. Dall, 2002/09/17

=cut

# Revision history
#
# 2002/09/17:   First working version.
